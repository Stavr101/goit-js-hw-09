{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,MAEpBA,MAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBb,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OAC3DM,QAAMC,IAAI,uBAAwCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAE3DQ,OAAM,SAAAN,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBb,EAAAgB,OAAOM,QAAQ,sBAAuCJ,OAAfN,EAAS,QAAYM,OAANL,EAAM,OAC1DM,QAAMC,IAAI,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,WA5ChD,CACXU,KAAMC,SAASC,cAAc,SAC7BZ,MAAOW,SAASC,cAAc,wBAC9BC,KAAMF,SAASC,cAAc,uBAC7BE,OAAQH,SAASC,cAAc,2BAG5BF,KAAKK,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAMC,iBAQN,IANA,IAAgCC,EAAAF,EAAMG,cAA9BnB,EAAwBkB,EAAxBlB,MAAOa,EAAiBK,EAAjBL,KAAMC,EAAWI,EAAXJ,OAEjBM,EAAaC,OAAOrB,EAAMsB,OACxBC,EAAYF,OAAOR,EAAKS,OACxBE,EAAeH,OAAOP,EAAOQ,OAE1BvB,EAAW,EAAGA,GAAYyB,EAAczB,GAAY,EAE3DV,EAAcU,EADdqB,GAAcG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.input[name=\"delay\"]'),\n  step: document.querySelector('.input[name=\"step\"]'),\n  amount: document.querySelector('.input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget;\n\n  let delayFirst = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountNumber = Number(amount.value);\n\n  for (let position = 1; position <= amountNumber; position += 1) {\n    delayFirst += stepDelay;\n    createPromise(position, delayFirst);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","console","log","catch","failure","form","document","querySelector","step","amount","addEventListener","event","preventDefault","_currentTarget","currentTarget","delayFirst","Number","value","stepDelay","amountNumber"],"version":3,"file":"03-promises.ac9465ce.js.map"}